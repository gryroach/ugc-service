version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: ugc-nginx
    restart: always
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/sites:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - ugc-api

  ugc-api:
    build: ugc_api
    container_name: ugc-api
    image: ugc-api-image
    restart: always
    env_file:
      - ./.env
    ports:
      - "8010:8000"
    volumes:
      - ./ugc_api/src:/app/src
    depends_on:
      - mongos1


  mongors1n1:
    container_name: mongors1n1
    image: mongo
    restart: always
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-shard1.js:/docker-entrypoint-initdb.d/init-shard1.js
      - mongo_data1:/data/db
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    restart: always
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data2:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    restart: always
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data3:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  # второй шард и реплики
  mongors2n1:
    container_name: mongors2n1
    image: mongo
    restart: always
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-shard2.js:/docker-entrypoint-initdb.d/init-shard2.js
      - mongo_data4:/data/db
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    restart: always
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data5:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongors2n3:
    container_name: mongors2n3
    image: mongo
    restart: always
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data6:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  # серверы конфигурации
  mongocfg1:
    container_name: mongocfg1
    image: mongo
    restart: always
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-config.js:/docker-entrypoint-initdb.d/init-config.js
      - mongocfg1:/data/db
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    healthcheck:
      test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    restart: always
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongocfg2:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    restart: always
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongocfg3:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  # mongos
  mongos1:
    container_name: mongos1
    image: mongo
    restart: always
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27019:27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-mongos.js:/docker-entrypoint-initdb.d/init-mongos.js
    depends_on:
      - mongocfg1
      - mongocfg2


  mongos2:
    container_name: mongos2
    image: mongo
    restart: always
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27020:27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - mongocfg1
      - mongocfg2

volumes:
  mongo_data1:
  mongo_data2:
  mongo_data3:
  mongo_data4:
  mongo_data5:
  mongo_data6:
  mongocfg1:
  mongocfg2:
  mongocfg3:
