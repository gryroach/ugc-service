name: UGC API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install "flake8>=7.1.1" "mypy>=1.14.1" "ruff>=0.9.3"

    - name: Lint with flake8
      run: |
        flake8 --config ./ugc_api/setup.cfg

    - name: Lint with ruff
      run: |
        ruff check --exclude research --output-format=github

    - name: Lint with mypy
      run: |
        mypy --config-file ugc_api/pyproject.toml --exclude research .

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Run tests
      run: |
        make test

    - name: Send Telegram notification
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ðŸ”” CI Pipeline Status for ${{ github.repository }}

          Event: ${{ github.event_name }}
          Branch: ${{ github.ref_name }}

          Workflow Status: ${{ job.status }}

          ${{ github.event_name == 'pull_request' && format('Pull Request: #{0}', github.event.pull_request.number) || format('Commit: {0}', github.sha) }}
          ${{ github.event.pull_request.title || github.event.commits[0].message }}

          Details: ${{ github.event_name == 'pull_request' && github.event.pull_request.html_url || format('https://github.com/{0}/commit/{1}', github.repository, github.sha) }}
